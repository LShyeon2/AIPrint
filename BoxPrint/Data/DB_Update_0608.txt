CREATE TABLE TB_USER_INFO_TMP AS
SELECT SCS_CD, USER_ID, PASSWORD_GB,GROUP_GB, USE_STAT, USING_DTTM FROM TB_USER_INFO;


DROP TABLE TB_USER_INFO;
	
--------------------------------------------------------
--  DDL for Table TB_USER_INFO
--------------------------------------------------------

  CREATE TABLE "SCS_SKOH2_31"."TB_USER_INFO" 
   (	"SCS_CD" NVARCHAR2(64), 
	"USER_ID" NVARCHAR2(64), 
    "USER_NM" NVARCHAR2(64),
    "TEAM_NM" NVARCHAR2(64),
	"PASSWORD_GB" NVARCHAR2(128),
	"GROUP_GB" NUMBER, 
	"USE_STAT" CHAR(1 BYTE), 
	"USING_DTTM" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"   NO INMEMORY ;
--------------------------------------------------------
--  DDL for Index TB_USER_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCS_SKOH2_31"."TB_USER_PK1" ON "SCS_SKOH2_31"."TB_USER_INFO" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table TB_USER_INFO
--------------------------------------------------------

  ALTER TABLE "SCS_SKOH2_31"."TB_USER_INFO" MODIFY ("SCS_CD" NOT NULL ENABLE);
  ALTER TABLE "SCS_SKOH2_31"."TB_USER_INFO" MODIFY ("USER_ID" NOT NULL ENABLE);
  ALTER TABLE "SCS_SKOH2_31"."TB_USER_INFO" ADD CONSTRAINT "SYS_C007876" CHECK (USE_STAT = '1' OR USE_STAT = '0') ENABLE;
	

INSERT INTO TB_USER_INFO
SELECT SCS_CD,USER_ID ,'' ,'' ,PASSWORD_GB,GROUP_GB, USE_STAT, USING_DTTM FROM TB_USER_INFO_TMP;

DROP TABLE TB_USER_INFO_TMP;



----------------------


create or replace PROCEDURE "USP_STC_USER_INFO_SET" 
(
    P_SCS_CD        IN NVARCHAR2,
    P_USER_ID       IN NVARCHAR2,
    P_USER_NM       IN NVARCHAR2,
    P_TEAM_NM       IN NVARCHAR2,
    P_PASSWORD_GB   IN NVARCHAR2,
    P_GROUP_GB      IN NUMBER,
    P_USER_STAT     IN CHAR,
    P_USING_DTTM    IN NUMBER,
    P_DEL           IN CHAR,
    R_RESULT            OUT NVARCHAR2,
    R_TEMP              OUT NVARCHAR2    
)
IS
    V_CNT  NUMBER := 0;
BEGIN
    SELECT COUNT(USER_ID)
        INTO V_CNT
        FROM TB_USER_INFO WHERE SCS_CD=P_SCS_CD AND USER_ID=P_USER_ID;

    IF V_CNT=0 AND P_DEL='0' THEN
        INSERT INTO TB_USER_INFO (SCS_CD,  USER_ID, USER_NM, TEAM_NM, PASSWORD_GB, GROUP_GB, USE_STAT, USING_DTTM) 
            VALUES (P_SCS_CD, P_USER_ID, P_USER_NM, P_TEAM_NM, P_PASSWORD_GB, P_GROUP_GB, P_USER_STAT, P_USING_DTTM);
        R_RESULT := 'USER_INSERT';  
        R_TEMP := P_USER_ID;    
    ELSE
        IF P_DEL='1' THEN
            DELETE FROM TB_USER_INFO WHERE SCS_CD=P_SCS_CD AND USER_ID=P_USER_ID;
            R_RESULT := 'USER_DELETE';  
            R_TEMP := P_USER_ID;
        ELSE
            UPDATE TB_USER_INFO SET USER_NM=P_USER_NM, TEAM_NM=P_TEAM_NM, PASSWORD_GB=P_PASSWORD_GB, GROUP_GB=P_GROUP_GB, USE_STAT=P_USER_STAT, USING_DTTM=P_USING_DTTM WHERE USER_ID=P_USER_ID;
            R_RESULT := 'USER_UPDATE';  
            R_TEMP := P_USER_ID;        
        END IF;
    END IF;

    COMMIT;

    EXCEPTION
        WHEN OTHERS THEN
        BEGIN
            R_RESULT := 'NO_USER';  
            R_TEMP := 'EXCEPTION';
            ROLLBACK;
        END;       
END USP_STC_USER_INFO_SET;


--------------------------

create or replace FUNCTION "UFN_STC_USER_INFO_GET" 
(
    P_SCS_CD    IN NVARCHAR2
)
    RETURN SYS_REFCURSOR
IS
    TMP_DATA SYS_REFCURSOR;
BEGIN
    OPEN TMP_DATA FOR
    SELECT TMP_USER_INFO.USER_ID, TMP_USER_INFO.USER_NM, TMP_USER_INFO.TEAM_NM, TMP_USER_INFO.PASSWORD_GB, TMP_USER_INFO.GROUP_GB, TMP_USER_INFO.USE_STAT, TMP_USER_INFO.USING_DTTM 
        FROM TB_USER_INFO TMP_USER_INFO WHERE TMP_USER_INFO.SCS_CD=P_SCS_CD;
    RETURN TMP_DATA;
    CLOSE TMP_DATA;
END UFN_STC_USER_INFO_GET;



