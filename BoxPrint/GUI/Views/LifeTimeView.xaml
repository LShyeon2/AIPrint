<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Stockerfirmware.GUI.Views"
      xmlns:i="http://schemas.Microsoft.com/expression/2010/interactivity"
      xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="Stockerfirmware.GUI.Views.LifeTimeView"
      mc:Ignorable="d" 
      d:DesignHeight="820" d:DesignWidth="1160"
      Title="상태 뷰">

    <Page.Resources>
        <!--Toggle Button Template-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid x:Name="gd">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" SnapsToDevicePixels="True" Grid.ColumnSpan="2" Background="#FFE5E5E5" BorderBrush="{x:Null}"/>
                <Border x:Name="Boredr1" SnapsToDevicePixels="True" Grid.Column="1"  Margin="1.1,1,1,1" Background="#FFE5E5E5" BorderBrush="{x:Null}" BorderThickness="0" />
                <Path x:Name="Arrow" SnapsToDevicePixels="True" Grid.Column="1" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 6 6 L 12 0 Z" Margin="6,9" Height="9.5" Stretch="Fill" Width="12.667"/>
                <ContentPresenter Grid.Column="0" TextElement.Foreground="Orange"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Arrow" Property="Fill" Value="#FF2AA8DE"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 5 5 L 10 0"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                    <Setter TargetName="Arrow" Property="Stroke" Value="White"/>
                    <Setter TargetName="Arrow" Property="StrokeThickness" Value="1.5"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="gd" Property="Visibility" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--TextBox Template-->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" />
        </ControlTemplate>

        <!--combobox-->
        <Style x:Key="combobox_style" TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" Foreground="Black" Template="{StaticResource ComboBoxToggleButton}" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3"  VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <TextBox OverridesDefaultStyle="True" SelectionBrush="Gray" CaretBrush="Black" Margin="0,0,30,0" TextWrapping="NoWrap"   x:Name="PART_EditableTextBox" FontFamily="Segoe UI Dark"   Foreground="Black" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" Focusable="True"  VerticalAlignment="Center"  FontSize="15"   Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup x:Name="Popup"  Grid.ColumnSpan="2" Placement="Bottom"  IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" OpacityMask="{x:Null}">
                                <Grid x:Name="DropDown"   SnapsToDevicePixels="True" MaxWidth="{TemplateBinding ActualWidth}" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="White">
                                    <Border Grid.ColumnSpan="2" Grid.RowSpan="2" x:Name="DropDownBorder" SnapsToDevicePixels="True" Background="Transparent" MaxWidth="{TemplateBinding ActualWidth}" BorderThickness="1" BorderBrush="#FFA3B2B8"/>
                                    <ScrollViewer Grid.ColumnSpan="2" ScrollViewer.CanContentScroll="False" Grid.Row="1" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" Background="Transparent" Margin="1"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter  TargetName="PART_EditableTextBox" Property="Background" Value="White"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="Black"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="Black"/>
                                <Setter  TargetName="PART_EditableTextBox" Property="IsEnabled" Value="False"/>
                                <Setter  TargetName="PART_EditableTextBox" Property="Background" Value="White"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--DataGrid Text 오른쪽 정렬-->
        <Style x:Key="DataGridCellHorizontalAlignmentStyle" TargetType="{x:Type TextBlock}">

            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <!--<Setter Property="Margin" Value="10,0"></Setter>-->

        </Style>
        <!--DataGrid Text 가운데 정렬-->
        <Style x:Key="DataGridCellCenterAlignmentStyle" TargetType="{x:Type TextBlock}">

            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment"   Value="Center"/>
            <!--<Setter Property="Margin" Value="10,0"></Setter>-->
        </Style>


    </Page.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="487*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" >
            <TextBlock Text="LifeTime" Foreground="#FFEC685B" FontSize="35" FontFamily="/Stockerfirmware;component/Font/#NanumSquareRoundOTF ExtraBold"/>
            <TextBlock Text="view" Foreground="#FF0D2636" Margin="10,0,0,0" FontSize="35" FontFamily="/Stockerfirmware;component/Font/#NanumSquareRoundOTF ExtraBold"/>
        </DockPanel>

        <Grid x:Name="grdMain" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="AUTO"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="10"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="93*"/>
                <ColumnDefinition Width="487*"/>

            </Grid.ColumnDefinitions>

            <Border Grid.Row="1" Grid.Column="1" Grid.RowSpan="3" Background="{Binding ElementName=colorBuffer_LifeTimeViewMainBackground, Path=Fill}" BorderBrush="{Binding ElementName=colorBuffer_LifeTimeViewBorderBrush, Path=Fill}"
                BorderThickness="3" CornerRadius="10" Margin="0,0,10,0" />

            <Border HorizontalAlignment="Center" BorderThickness="3" CornerRadius="5" Width="Auto" MinWidth="550" BorderBrush="{Binding ElementName=colorBuffer_LifeTimeViewBorderBrush, Path=Fill}" Grid.Row="1" Grid.Column="1" 
                    Background="{Binding ElementName=colorBuffer_LifeTimeViewMainBackground, Path=Fill}" Margin="0,15,0,-10">
                <Label Content="PARTS LIFE TIME MANAGEMENT"  FontSize="30" HorizontalAlignment="Center"  VerticalAlignment="Center" Width="418" Foreground="{Binding ElementName=colorBuffer_LifeTimeViewForeground, Path=Fill}"/>
            </Border>
            <Grid Grid.Row="3" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
            </Grid>
            <Grid Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center">
                <Button x:Name="button_ItemReset" Background="AliceBlue" Click="button_ItemReset_Click" BorderThickness="1" Width="200" Height="80" VerticalAlignment="Center" Margin="0,0,0,-10">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border  CornerRadius="5" BorderThickness="2" Margin="1">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Background" Value="{Binding ElementName=colorBuffer_LifeTimeViewButtonBackground, Path=Fill}"/>
                                                    <Setter Property="BorderBrush" Value="{Binding ElementName=colorBuffer_LifeTimeViewButtonBorderBrush, Path=Fill}"/>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{Binding ElementName=colorBuffer_LifeTimeViewButtonBackground_Enter, Path=Fill}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <StackPanel Height="80" VerticalAlignment="Bottom" Margin="0" >
                                                <TextBlock VerticalAlignment="Bottom" Background="Transparent" FontSize="20"  TextAlignment="Center" Text="Initialize selection" Margin="0,3,0,0"
                                                       Foreground="{Binding ElementName=colorBuffer_LifeTimeViewForeground, Path=Fill}"/>
                                                <Image Height="50" Width="50" Source="/image/Checkimage.png" Margin="5,2,5,5" RenderTransformOrigin="0.5,0.490" VerticalAlignment="Top"/>
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            <Border Grid.Row="1" Grid.RowSpan="3" CornerRadius="10" Margin="10,0" BorderBrush="{Binding ElementName=colorBuffer_LifeTimeViewBorderBrush, Path=Fill}" BorderThickness="3" Background="{Binding ElementName=colorBuffer_LifeTimeViewMainBackground, Path=Fill}">
                <TreeView x:Name="treeView_Select" Grid.Row="1" Grid.RowSpan="3" Margin="10,0" BorderThickness="0" Background="{Binding ElementName=colorBuffer_LifeTimeViewMainBackground, Path=Fill}" />
            </Border>
            <DataGrid x:Name="dataGrid_Parts" IsReadOnly="True" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Center" Height="527" RowBackground="White" AlternatingRowBackground="#FFE0EDF9" 
                  Margin="50,20,50,-10" VerticalAlignment="Top"  AutoGenerateColumns="False"  CanUserResizeColumns="True" CanUserSortColumns="False" CanUserReorderColumns="False" Width="820">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="모듈" Width="3*"  Binding="{Binding ModuleName}"/>
                    <DataGridTextColumn Header="부품 이름" Width="6*"  Binding="{Binding PartsName}" />
                    <DataGridTextColumn Header="부품 모델" Width="7*"  Binding="{Binding PartsModel}" />
                    <DataGridTextColumn Header="부품 메이커" Width="7*"  Binding="{Binding PartsMaker}" />
                    <DataGridTextColumn Header="설명" Width="6*"  Binding="{Binding PartsDesc}" />
                    <DataGridTextColumn Header="현재 값" Width="4*"  Binding="{Binding CurrentValue,StringFormat=F4}"     />
                    <DataGridTextColumn Header="수명 값" Width="3*"  Binding="{Binding LifeTimeValue}"     />
                    <DataGridTextColumn Header="단위" Width="2*"  Binding="{Binding MeasurementUnits}"     />
                    <DataGridTextColumn Header="마모율"  Width="2*"    Binding="{Binding LifePercentageString}"      />
                </DataGrid.Columns>

                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}" >
                        <Setter Property="Background" >
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF768AA2" Offset="0"/>
                                    <GradientStop Color="#FF495A70" Offset="0.25"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="#FF0D2636"/>
                        <Setter Property="BorderThickness" Value="1 1 2 2"/>
                        <Setter Property="Height" Value="60"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="FontFamily" Value="NanumSquareRoundOTFL"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding LifeOver}" Value="True">
                                <Setter Property="Background" Value="Orange"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding LifeOver}" Value="False">
                                <Setter Property="Background" Value="White"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            <DockPanel Grid.Row="3" VerticalAlignment="Bottom" Width="auto" Height="auto" Grid.Column="1" HorizontalAlignment="Right">
                <Ellipse x:Name="colorBuffer_LifeTimeViewMainBackground"                          Width="30" Height="30" Margin="5,0,0,0" IsHitTestVisible="False" Fill="#FF49596D"/>
                <Ellipse x:Name="colorBuffer_LifeTimeViewButtonBackground"             Width="30" Height="30" Margin="5,0,0,0" IsHitTestVisible="False">
                    <Ellipse.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF768AA2" Offset="0"/>
                            <GradientStop Color="#FF24466E" Offset="1"/>
                        </LinearGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
                <Ellipse x:Name="colorBuffer_LifeTimeViewForeground"                   Width="30" Height="30" Margin="5,0,0,0" IsHitTestVisible="False" Fill="White"/>
                <Ellipse x:Name="colorBuffer_LifeTimeViewBorderBrush"                  Width="30" Height="30" Margin="5,0,0,0" IsHitTestVisible="False" Fill="White"/>
                <Ellipse x:Name="colorBuffer_LifeTimeViewButtonBackground_Enter"       Width="30" Height="30" Margin="5,0,0,0" IsHitTestVisible="False">
                    <Ellipse.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="LightBlue"/>
                            <GradientStop Color="#FF62768F" Offset="0.502"/>
                            <GradientStop Color="LightBlue" Offset="1"/>
                        </LinearGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
                <Ellipse x:Name="colorBuffer_LifeTimeViewButtonBorderBrush"            Width="30" Height="30" Margin="5,0,0,0" IsHitTestVisible="False" Fill="DarkBlue"/>
                <Ellipse x:Name="colorBuffer_IOMonitorViewDataGridRowBackground"            Width="30" Height="30" Margin="5,0,0,0" IsHitTestVisible="False" Fill="{x:Null}"/>
            </DockPanel>
        </Grid>
    </Grid>
</Page>
