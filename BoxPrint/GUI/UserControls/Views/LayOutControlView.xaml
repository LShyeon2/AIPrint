<UserControl x:Class="BoxPrint.GUI.UserControls.Views.LayOutControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BoxPrint.GUI.UserControls.Views"
             mc:Ignorable="d" 
             xmlns:UIControl="clr-namespace:BoxPrint.GUI.UIControls"
             xmlns:uidictionary="clr-namespace:BoxPrint.GUI.UIControls"
             xmlns:ex="clr-namespace:TranslationByMarkupExtension" 
             Loaded="Control_Loaded"
             Unloaded="Control_Unloaded"
             PreviewMouseLeftButtonDown="UserControl_PreviewMouseLeftButtonDown"
             MouseLeftButtonUp="UserControl_MouseLeftButtonUp"
             MouseMove="UserControl_MouseMove"
             PreviewMouseWheel="UserControl_PreviewMouseWheel">

    <UserControl.Resources>
        <!--툴팁-->
        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource SK_ToolTipStyle}"/>

        <!--//230105 HHJ SCS 개선     //Crane Busy Path 이상 수정-->
        <SolidColorBrush x:Key="Rm1Busy" Color="{StaticResource ShelfBusyRM1}"/>
        <SolidColorBrush x:Key="Rm2Busy" Color="{StaticResource ShelfBusyRM2}"/>

        <!--점선보드 : 동적생성때문에 여기서 만듬-->
        <uidictionary:ThicknessMaxConverter x:Key="ThicknessMaxConverter" />
        <Style x:Key="DashedBorderStyle" TargetType="{x:Type uidictionary:DashedBorderControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type uidictionary:DashedBorderControl}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="{Binding Path=(uidictionary:DashedBorderControl.FrameCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{TemplateBinding Background}">
                            <Border.BorderBrush>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Rectangle StrokeDashArray="{Binding Path=(uidictionary:DashedBorderControl.StrokeDashArray), RelativeSource={RelativeSource TemplatedParent}}"
                                               Stroke="{TemplateBinding BorderBrush}"
                                               StrokeThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}},  Path=BorderThickness, Converter={StaticResource ThicknessMaxConverter}}"
                                               RadiusX="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.TopRight}"
                                               RadiusY="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.BottomLeft}"
                                               Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                               Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.BorderBrush>

                            <Border.Effect>
                                <DropShadowEffect BlurRadius="0" Direction="300" Opacity="0.3" ShadowDepth="1" />
                            </Border.Effect>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
        
    <Border x:Name="LayOutBorder" Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" ClipToBounds="True" Background="#FFF7F9FF">
        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
            <Viewbox x:Name="LayOutViewBox" Stretch="Uniform" 
                     Height="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Border}, Path=ActualHeight}"
                     Width="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Border}, Path=ActualWidth}"
                     VerticalAlignment="Center" HorizontalAlignment="Center"
                     RenderTransformOrigin="0.5,0.5"
                     Margin="{Binding Margins, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">

                <Viewbox.LayoutTransform>
                    <TransformGroup x:Name="ViewBoxtransGroup">
                        <ScaleTransform ScaleX="{Binding ScaleValue, UpdateSourceTrigger=PropertyChanged}"
                                        ScaleY="{Binding ScaleValue, UpdateSourceTrigger=PropertyChanged}"/>
                        <RotateTransform Angle="0"/>
                    </TransformGroup>
                </Viewbox.LayoutTransform>

                <Grid ShowGridLines="False" Background="Transparent">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="15"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid x:Name="GridFrontXArray" Grid.Row="1" Grid.Column="1" ShowGridLines="False"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="3" ShowGridLines="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="txtFrontBank" Text="{ex:Translate BANK Tag}" Grid.Row="0" Grid.Column="0"
                                   Visibility="Collapsed"
                                   FontSize="30" VerticalAlignment="Center" Foreground="{StaticResource SK_LBlack}"
                                   FontFamily="{StaticResource ExtraBoldFont}"
                                   RenderTransformOrigin="0.5,0.5">
                            <TextBlock.LayoutTransform>
                                <TransformGroup x:Name="Bank1transGroup">
                                    <RotateTransform Angle="0"/>
                                </TransformGroup>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <Grid x:Name="gridFrontLevel" Grid.Row="0" Grid.Column="1" ShowGridLines="False"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                      Margin="10,0,10,0"/>

                        <TextBlock x:Name="txtRearBank" Text="{ex:Translate BANK Tag}" Grid.Row="2" Grid.Column="0"
                                   Visibility="Collapsed"
                                   FontSize="30" VerticalAlignment="Center" Foreground="{StaticResource SK_LBlack}"
                                   FontFamily="{StaticResource ExtraBoldFont}"
                                   RenderTransformOrigin="0.5,0.5">
                            <TextBlock.LayoutTransform>
                                <TransformGroup x:Name="Bank2transGroup">
                                    <RotateTransform Angle="0"/>
                                </TransformGroup>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <Grid x:Name="gridRearLevel" Grid.Row="2" Grid.Column="1" ShowGridLines="False"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                      Margin="10,0,10,0"/>
                    </Grid>

                    <Grid x:Name="GridRearXArray" Grid.Row="5" Grid.Column="1" ShowGridLines="False"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                    <Grid x:Name="grdMain" Grid.Row="2" Grid.Column="1" Grid.RowSpan="3">
                        <Path x:Name="RM1Path" Panel.ZIndex="9999">
                            <Path.Data>
                                <GeometryGroup x:Name="RM1PathGroup"/>
                            </Path.Data>
                        </Path>
                        <Path x:Name="RM2Path" Panel.ZIndex="9999">
                            <Path.Data>
                                <GeometryGroup x:Name="RM2PathGroup"/>
                            </Path.Data>
                        </Path>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="1" Panel.ZIndex="10"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="30" >
                                <Canvas x:Name="CanvasRMfirme" Canvas.Left="0" Canvas.Top="0" Background="Transparent">
                                    <!--<Border x:Name="RMRail" Visibility="Visible" IsHitTestVisible="False" Canvas.Top="3" CornerRadius="10" Background="#f4f4f4f4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="25" Width="{Binding ElementName=CanvasRMfirme, Path=ActualWidth}">
                                        <Border IsHitTestVisible="False" Margin="0,8" CornerRadius="5" BorderBrush="{StaticResource SK_LBlack}" BorderThickness="0,0,1,2" Background="{StaticResource SK_MouseOverGray}" VerticalAlignment="Stretch" Opacity="0.3"/>
                                    </Border>-->

                                    <Grid x:Name="RMRail" IsHitTestVisible="False" 
                                          Height="10" Canvas.Top="10"
                                          Width="{Binding ElementName=CanvasRMfirme, Path=ActualWidth}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <UIControl:UIControlRMRail x:Name="RM1Rail" Grid.Column="0" UnitName="RM1" Style="{DynamicResource SK_RMRailStyle}"
                                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                                   HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                                        <UIControl:UIControlRMRail x:Name="RM2Rail" Grid.Column="1" UnitName="RM2" Style="{DynamicResource SK_RMRailStyle}"
                                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                                   HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                                    </Grid>

                                    <UIControl:UIControlRM x:Name="CanvasRM1" DisplayName="TM01" UnitName="RM1"
                                                           Style="{DynamicResource SK_RMStyleNew}"
                                                           Canvas.Left="0" Canvas.Top="3" Width="70" Height="25"
                                                           MouseEnter="ToolTipControl_MouseEnter"
                                                           MouseLeave="ToolTipControl_MouseLeave"
                                                           PreviewMouseLeftButtonDown="LayOutUnit_PreviewMouseLeftButtonDown"/>

                                    <UIControl:UIControlRM x:Name="CanvasRM2" DisplayName="TM02" UnitName="RM2"
                                                           Style="{DynamicResource SK_RMStyleNew}"
                                                           Canvas.Left="1230" Canvas.Top="3" Width="70" Height="25"
                                                           MouseEnter="ToolTipControl_MouseEnter"
                                                           MouseLeave="ToolTipControl_MouseLeave"
                                                           PreviewMouseLeftButtonDown="LayOutUnit_PreviewMouseLeftButtonDown"/>
                                </Canvas>
                            </Grid>
                            <!--Front Shelf, CV-->
                            <Grid x:Name="gridFront" Grid.Row="0"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MouseEnter="Shelf_MouseEnter" MouseLeave="Shelf_MouseLeave">
                                <Grid x:Name="GridFrontCV" ShowGridLines="False" Tag="Front"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                <Grid x:Name="GridFrontShelf" ShowGridLines="False" Tag="Front"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Grid>
                            <!--Rear Shelf, CV-->
                            <Grid x:Name="gridRear" Grid.Row="2"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MouseEnter="Shelf_MouseEnter" MouseLeave="Shelf_MouseLeave">
                                <Grid x:Name="GridRearShelf" ShowGridLines="False" Tag="Rear"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                <Grid x:Name="GridRearCV" ShowGridLines="False" Tag="Rear"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </Viewbox>
        </ScrollViewer>
    </Border>
</UserControl>
